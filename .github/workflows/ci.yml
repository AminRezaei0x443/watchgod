name: ci

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request: {}

jobs:
  test:
    name: test py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: install dependencies
      run: |
        make install
        pip freeze

    - name: test
      run: |
        make test
        coverage xml

    - uses: codecov/codecov-action@v1.0.13
      with:
        file: ./coverage.xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - run: pip install -r tests/requirements-linting.txt

    - run: make lint

  deploy:
    needs:
      - test
      - lint
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: install
        run: pip install -U pip setuptools twine wheel

      - name: check tag
        run: PACKAGE=watchgod python <(curl -Ls https://git.io/JvQsH)

      - run: python setup.py sdist bdist_wheel

      - run: twine check dist/*

      - name: upload to pypi
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
